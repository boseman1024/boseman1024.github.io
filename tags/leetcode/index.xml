<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LeetCode on KUMA2X</title>
    <link>https://boseman1024.github.io/tags/leetcode/</link>
    <description>Recent content in LeetCode on KUMA2X</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Sep 2018 21:47:14 +0000</lastBuildDate>
    
	<atom:link href="https://boseman1024.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Top Interview Questions-Easy-Array</title>
      <link>https://boseman1024.github.io/2018/top-interview-questions-easy-array/</link>
      <pubDate>Mon, 17 Sep 2018 21:47:14 +0000</pubDate>
      
      <guid>https://boseman1024.github.io/2018/top-interview-questions-easy-array/</guid>
      <description>#Linked List
Delete Node in a Linked List Example 1:
 Input: head = [4,5,1,9], node = 5
Output: [4,1,9]
Explanation: You are given the second node with value 5, the linked list should become 4 -&amp;gt; 1 -&amp;gt; 9 after calling your function.
 Example 2:
 Input: head = [4,5,1,9], node = 1
Output: [4,5,9]
Explanation: You are given the third node with value 1, the linked list should become 4 -&amp;gt; 5 -&amp;gt; 9 after calling your function.</description>
    </item>
    
    <item>
      <title>Top Interview Questions-Easy-String</title>
      <link>https://boseman1024.github.io/2018/top-interview-questions-easy-string/</link>
      <pubDate>Mon, 17 Sep 2018 21:47:14 +0000</pubDate>
      
      <guid>https://boseman1024.github.io/2018/top-interview-questions-easy-string/</guid>
      <description> Valid Palindrome 回文 解答： public boolean isPalindrome(String s) { char[] str = s.toLowerCase().toCharArray(); int i=0; int j=str.length-1; while(i&amp;lt;j) { while(i&amp;lt;str.length&amp;amp;&amp;amp;!isChar(str[i])) { i++; } while(j&amp;gt;=0&amp;amp;&amp;amp;!isChar(str[j])) { j--; } if(i&amp;lt;j&amp;amp;&amp;amp;str[i]!=str[j]) { return false; } i++; j--; } return true; } public boolean isChar(char c) { return (&#39;a&#39;&amp;lt;=c&amp;amp;&amp;amp;c&amp;lt;=&#39;z&#39;)||(&#39;A&#39;&amp;lt;=c&amp;amp;&amp;amp;c&amp;lt;=&#39;Z&#39;)||(c&amp;gt;=&#39;0&#39;&amp;amp;&amp;amp;c&amp;lt;=&#39;9&#39;); }  Reverse String 反转字符串 解答： public String reverseString(String s) { return new StringBuffer(s).reverse().toString(); }  </description>
    </item>
    
  </channel>
</rss>