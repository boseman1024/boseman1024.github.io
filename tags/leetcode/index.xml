<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LeetCode on KUMA2X</title>
    <link>https://boseman1024.github.io/tags/leetcode/</link>
    <description>Recent content in LeetCode on KUMA2X</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 20 Sep 2018 21:47:14 +0000</lastBuildDate>
    
	<atom:link href="https://boseman1024.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Top Interview Questions-Easy-Array</title>
      <link>https://boseman1024.github.io/2018/top-interview-questions-easy-array/</link>
      <pubDate>Thu, 20 Sep 2018 21:47:14 +0000</pubDate>
      
      <guid>https://boseman1024.github.io/2018/top-interview-questions-easy-array/</guid>
      <description>Design Shuffle an Array Shuffle a set of numbers without duplicates.
Example:
 // Init an array with set 1, 2, and 3.
int[] nums = {1,2,3};
Solution solution = new Solution(nums);
// Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] must equally likely to be returned.
solution.shuffle();
// Resets the array back to its original configuration [1,2,3].
solution.reset();
// Returns the random shuffling of array [1,2,3].</description>
    </item>
    
    <item>
      <title>Top Interview Questions-Easy-String</title>
      <link>https://boseman1024.github.io/2018/top-interview-questions-easy-string/</link>
      <pubDate>Mon, 17 Sep 2018 21:47:14 +0000</pubDate>
      
      <guid>https://boseman1024.github.io/2018/top-interview-questions-easy-string/</guid>
      <description>String First Unique Character in a String Given a string, find the first non-repeating character in it and return it&amp;rsquo;s index. If it doesn&amp;rsquo;t exist, return -1.
Note: You may assume the string contain only lowercase letters.
Examples:
 s = &amp;ldquo;leetcode&amp;rdquo;
return 0.
s = &amp;ldquo;loveleetcode&amp;rdquo;,
return 2.
 解答： class Solution { public int firstUniqChar(String s) { for(int i=0;i&amp;lt;s.length();i++) { if(s.indexOf(s.charAt(i))==s.lastIndexOf(s.charAt(i))) { return i; } } return -1; } }  Valid Palindrome 回文 解答： public boolean isPalindrome(String s) { char[] str = s.</description>
    </item>
    
  </channel>
</rss>