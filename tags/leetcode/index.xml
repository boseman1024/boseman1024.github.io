<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LeetCode on KUMA2X</title>
    <link>https://boseman1024.github.io/tags/leetcode/</link>
    <description>Recent content in LeetCode on KUMA2X</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 21 Sep 2018 15:08:22 +0000</lastBuildDate>
    
	<atom:link href="https://boseman1024.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Top Interview Questions-Easy-String</title>
      <link>https://boseman1024.github.io/2018/top-interview-questions-easy-string/</link>
      <pubDate>Fri, 21 Sep 2018 15:08:22 +0000</pubDate>
      
      <guid>https://boseman1024.github.io/2018/top-interview-questions-easy-string/</guid>
      <description>Others Missing Number Given an array containing n distinct numbers taken from 0, 1, 2, &amp;hellip;, n, find the one that is missing from the array.
Example 1:
 Input: [3,0,1]
Output: 2
 Example 2:
 Input: [9,6,4,2,3,5,7,0,1]
Output: 8
 解答： class Solution { //0+1+2+……+n = n*(n+1)/2 public int missingNumber(int[] nums) { int sum = nums.length*(nums.length+1)/2; for(int i=0;i&amp;lt;nums.length;i++){sum-=nums[i];} return sum; } }  Reverse Bits Reverse bits of a given 32 bits unsigned integer.</description>
    </item>
    
    <item>
      <title>Top Interview Questions-Easy-Array</title>
      <link>https://boseman1024.github.io/2018/top-interview-questions-easy-array/</link>
      <pubDate>Thu, 20 Sep 2018 21:47:14 +0000</pubDate>
      
      <guid>https://boseman1024.github.io/2018/top-interview-questions-easy-array/</guid>
      <description>Design Shuffle an Array Shuffle a set of numbers without duplicates.
Example:
 // Init an array with set 1, 2, and 3.
int[] nums = {1,2,3};
Solution solution = new Solution(nums);
// Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] must equally likely to be returned.
solution.shuffle();
// Resets the array back to its original configuration [1,2,3].
solution.reset();
// Returns the random shuffling of array [1,2,3].</description>
    </item>
    
  </channel>
</rss>