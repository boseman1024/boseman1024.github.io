<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LeetCode on KUMA2X</title>
    <link>https://boseman1024.github.io/tags/leetcode/</link>
    <description>Recent content in LeetCode on KUMA2X</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 29 Sep 2018 22:59:34 +0000</lastBuildDate>
    
	<atom:link href="https://boseman1024.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Top Interview Questions-Medium-①</title>
      <link>https://boseman1024.github.io/2018/top-interview-questions-medium-1/</link>
      <pubDate>Sat, 29 Sep 2018 22:59:34 +0000</pubDate>
      
      <guid>https://boseman1024.github.io/2018/top-interview-questions-medium-1/</guid>
      <description>Trees and Graphs Populating Next Right Pointers in Each Node 将二叉树每层最右节点指向null Given a binary tree
Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to NULL.
Initially, all next pointers are set to NULL.
Note:
 You may only use constant extra space.
 Recursive approach is fine, implicit stack space does not count as extra space for this problem.</description>
    </item>
    
    <item>
      <title>Top Interview Questions-Easy-①</title>
      <link>https://boseman1024.github.io/2018/top-interview-questions-easy-1/</link>
      <pubDate>Fri, 28 Sep 2018 21:47:14 +0000</pubDate>
      
      <guid>https://boseman1024.github.io/2018/top-interview-questions-easy-1/</guid>
      <description>Design Shuffle an Array Shuffle a set of numbers without duplicates.
Example:
 // Init an array with set 1, 2, and 3.
int[] nums = {1,2,3};
Solution solution = new Solution(nums);
// Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] must equally likely to be returned.
solution.shuffle();
// Resets the array back to its original configuration [1,2,3].
solution.reset();
// Returns the random shuffling of array [1,2,3].</description>
    </item>
    
    <item>
      <title>Top Interview Questions-Easy-②</title>
      <link>https://boseman1024.github.io/2018/top-interview-questions-easy-2/</link>
      <pubDate>Thu, 27 Sep 2018 15:08:22 +0000</pubDate>
      
      <guid>https://boseman1024.github.io/2018/top-interview-questions-easy-2/</guid>
      <description>Dynamic Programming Maximum Subarray Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.
Example:
 Input: [-2,1,-3,4,-1,2,1,-5,4],
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.
 解答： class Solution { public int maxSubArray(int[] nums) { if(nums.length&amp;lt;1||nums==null) {return 0;} int sum = nums[0]; int temp = 0; for(int i:nums){ temp+=i; sum = Math.max(sum,temp); temp = temp&amp;lt;0?</description>
    </item>
    
  </channel>
</rss>