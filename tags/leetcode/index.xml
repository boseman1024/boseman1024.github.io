<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LeetCode on KUMA2X</title>
    <link>https://boseman1024.github.io/tags/leetcode/</link>
    <description>Recent content in LeetCode on KUMA2X</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Sep 2018 21:47:14 +0000</lastBuildDate>
    
	<atom:link href="https://boseman1024.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Array_Top Interview Questions</title>
      <link>https://boseman1024.github.io/2018/array_top-interview-questions-easy/</link>
      <pubDate>Mon, 17 Sep 2018 21:47:14 +0000</pubDate>
      
      <guid>https://boseman1024.github.io/2018/array_top-interview-questions-easy/</guid>
      <description>Single Number Given a non-empty array of integers, every element appears twice except for one. Find that single one.
Note:
 Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?  Example 1:
 Input: [2,2,1]
Output: 1
 Example 2:
 Input: [4,1,2,1,2]
Output: 4
 解答： public int singleNumber(int[] nums) { List&amp;lt;Integer&amp;gt; list = new ArrayList&amp;lt;Integer&amp;gt;(); for(int i=0;i&amp;lt;nums.length;i++){ if(list.contains(nums[i])){ list.remove(Integer.valueOf(nums[i])); }else{ list.</description>
    </item>
    
  </channel>
</rss>