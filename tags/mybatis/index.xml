<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mybatis on KUMA2X</title>
    <link>https://boseman1024.github.io/tags/mybatis/</link>
    <description>Recent content in Mybatis on KUMA2X</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 May 2018 20:50:27 +0000</lastBuildDate>
    
	<atom:link href="https://boseman1024.github.io/tags/mybatis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mybatis：一对多关联查询及批量插入（注解方式）</title>
      <link>https://boseman1024.github.io/2018/mybatis%E4%B8%80%E5%AF%B9%E5%A4%9A%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2%E5%8F%8A%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5%E6%B3%A8%E8%A7%A3%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Tue, 01 May 2018 20:50:27 +0000</pubDate>
      
      <guid>https://boseman1024.github.io/2018/mybatis%E4%B8%80%E5%AF%B9%E5%A4%9A%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2%E5%8F%8A%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5%E6%B3%A8%E8%A7%A3%E6%96%B9%E5%BC%8F/</guid>
      <description>一对多关联查询 通过@Results构造结果映射： * javaType：返回类型 * property：指定属性 * column：将作为指定参数传递给指定方法（即例中selectMenuByRid方法）
例：
//角色mapper public interface SysRoleMapper { @Select(&amp;quot;select * from sys_role&amp;quot;) @Results({ @Result(property=&amp;quot;name&amp;quot;,column=&amp;quot;name&amp;quot;), @Result(property=&amp;quot;namezh&amp;quot;,column=&amp;quot;namezh&amp;quot;), @Result(property=&amp;quot;menus&amp;quot;,column=&amp;quot;id&amp;quot;,javaType=List.class,many=@Many(select=&amp;quot;com.kuma2x.xauth.mapper.SysMenuMapper.selectMenuByRid&amp;quot;)) }) List&amp;lt;SysRole&amp;gt; selectRoleByUId(int uid); } //菜单mapper public interface SysMenuMapper { //通过角色id在角色菜单关联表中查询到该角色所拥有菜单权限 @Select(&amp;quot;select * from sys_menu,sys_role_menu where sys_menu.id = sys_role_menu.mid and sys_role_menu.rid = #{rid}&amp;quot;) List&amp;lt;Integer&amp;gt; selectMenuByRid(int rid); }  批量插入 使用&amp;lt;script&amp;gt;标签可像XML语法一样书写。 通过&amp;lt;foreach&amp;gt;迭代集合进行插入，注解中参数需通过@Param指定参数。
foreach标签的属性主要有： * item：迭代时集合中每个元素的别名。 * index：每个元素在集合中迭代序列。 * collection：指定集合。 * open：该语句的开始符。 * separator：每次迭代的分隔符。 * close：该语句的结束符。
&amp;lt;foreach collection=&amp;quot;list&amp;quot; index=&amp;quot;index&amp;quot; item=&amp;quot;item&amp;quot; open=&amp;quot;(&amp;quot; separator=&amp;quot;,&amp;quot; close=&amp;quot;)&amp;quot;&amp;gt; #{item} &amp;lt;/foreach&amp;gt;  完整示例：</description>
    </item>
    
  </channel>
</rss>